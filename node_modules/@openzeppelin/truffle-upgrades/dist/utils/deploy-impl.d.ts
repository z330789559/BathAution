import { ValidationOptions, EthereumProvider, StorageLayout, ValidationRunData, Version } from '@openzeppelin/upgrades-core';
import { Options } from './options';
import { ContractClass } from './truffle';
interface DeployedImpl {
    impl: string;
    kind: NonNullable<ValidationOptions['kind']>;
}
interface DeployedBeaconImpl {
    impl: string;
}
export interface DeployData {
    fullOpts: Required<Options>;
    validations: ValidationRunData;
    version: Version;
    provider: EthereumProvider;
    layout: StorageLayout;
}
export declare function getDeployData(opts: Options, Contract: ContractClass): Promise<DeployData>;
export declare function deployProxyImpl(Contract: ContractClass, opts: Options, proxyAddress?: string): Promise<DeployedImpl>;
export declare function deployBeaconImpl(Contract: ContractClass, opts: Options, beaconAddress?: string): Promise<DeployedBeaconImpl>;
export {};
//# sourceMappingURL=deploy-impl.d.ts.map